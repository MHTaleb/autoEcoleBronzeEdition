/**
 * This file was generated by the JPA Modeler
 */
package entities;

import java.io.Serializable;
import java.util.Objects;
import javax.persistence.Basic;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToOne;

/**
 * @author taleb
 */
@Entity
@NamedQueries({
    @NamedQuery(name = "CandidatEtatExamen.findByExam", query = "SELECT e FROM CandidatEtatExamen e WHERE e.examen.id = :id AND e.typeExamen = :type")
    ,@NamedQuery(name = "CandidatEtatExamen.removeByExam" ,query = "DELETE FROM CandidatEtatExamen e WHERE e.examen.id = :id")    
    ,@NamedQuery(name = "CandidatEtatExamen.findByExamAndCandidat" ,query = "SELECT e FROM CandidatEtatExamen e WHERE e.examen.id = :id AND e.candidat.id = :idCandidat")    
})
public class CandidatEtatExamen implements Serializable {

    private static final long serialVersionUID = 8421695444215414918L;
    public static final String FIND_BY_EXAM="CandidatEtatExamen.findByExam";
    public static final String FIND_BY_EXAM_ID="id";
    public static final String FIND_BY_EXAM_TYPE="type";
    public static final String REMOVE_BY_EXAM="CandidatEtatExamen.removeByExam";
    public static final String REMOVE_BY_EXAM_ID="id";
    public static final String FIND_BY_EXAM_AND_CANDIDAT="CandidatEtatExamen.findByExamAndCandidat";
    public static final String FIND_BY_EXAM_AND_CANDIDAT_ID_EXAMEN="id";
    public static final String FIND_BY_EXAM_AND_CANDIDAT_ID_CANDIDAT="idCandidat";
    
    
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    @Basic
    private CategorieExamens typeExamen;

    @Basic
    private EtatExamen etatExamen;

    @Override
    public int hashCode() {
        int hash = 5;
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final CandidatEtatExamen other = (CandidatEtatExamen) obj;
        if (!Objects.equals(this.id, other.id)) {
            return false;
        }
        return true;
    }

    @OneToOne(targetEntity = Examen.class)
    private Examen examen;

    @OneToOne(targetEntity = Candidat.class)
    private Candidat candidat;

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public CategorieExamens getTypeExamen() {
        return this.typeExamen;
    }

    public void setTypeExamen(CategorieExamens typeExamen) {
        this.typeExamen = typeExamen;
    }

    public EtatExamen getEtatExamen() {
        return this.etatExamen;
    }

    public void setEtatExamen(EtatExamen etatExamen) {
        this.etatExamen = etatExamen;
    }

    public Examen getExamen() {
        return this.examen;
    }

    public void setExamen(Examen examen) {
        this.examen = examen;
    }

    public Candidat getCandidat() {
        return this.candidat;
    }

    public void setCandidat(Candidat candidat) {
        this.candidat = candidat;
    }

    @Override
    public String toString() {
        return  candidat+"" ;
    }

}
